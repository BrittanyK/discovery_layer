# for more information on solrmarc mappings, 
#  see http://code.google.com/p/solrmarc/w/list 
#
# GenericBlacklight uses these conventions, mostly. 
#   _t for indexed fields (for searching)
#   _display for stored fields (for display in UI)
#   _facet for facet fields 
#   _sort for sorting fields (fields used to sort results)
#
#   see jetty/solr/conf/schema.xml in Blacklight demo project
#   see http://blacklight.rubyforge.org/  DEMO_README file

id = 001, first
marc_display = FullRecordAsXML
text = custom, getAllSearchableFields(100, 900)

language_facet = 008[35-37]:041a:041d, language_map.properties
# format is for facet, display, and selecting partial for display in show view
format = 007[0-1]:000[6-7]:000[6], (map.format), first
isbn_t = 020a, (pattern_map.isbn_clean)
material_type_display = custom, removeTrailingPunct(300aa)

# Title fields
#    primary title 
title_t = custom, getLinkedFieldCombined(245a)
title_display = custom, removeTrailingPunct(245a)
title_vern_display = custom, getLinkedField(245a)
#    subtitle
subtitle_t = custom, getLinkedFieldCombined(245b)
subtitle_display = custom, removeTrailingPunct(245b)
subtitle_vern_display = custom, getLinkedField(245b)
#    additional title fields
title_addl_t = custom, getLinkedFieldCombined(245abnps:130[a-z]:240[a-gk-s]:210ab:222ab:242abnp:243[a-gk-s]:246[a-gnp]:247[a-gnp])
title_added_entry_t = custom, getLinkedFieldCombined(511a:700[gk-pr-t]:710[fgk-t]:711fgklnpst:730[a-gk-t]:740anp)
title_series_t = custom, getLinkedFieldCombined(440anpv:490av)
title_sort = custom, getSortableTitle

# Author fields
author_t = custom, getLinkedFieldCombined(100abcegqu:110abcdegnu:111acdegjnqu)
author_display = 100abcdq:110[a-z]:111[a-z]
author_vern_display = custom, getLinkedField(100abcdq:110[a-z]:111[a-z])
author_sort = custom, getSortableAuthor

# Subject fields
subject_t = custom, getLinkedFieldCombined(600[a-u]:610[a-u]:611[a-u]:630[a-t]:650[a-e]:651ae:653aa:654[a-e]:655[a-c])
subject_addl_t = custom, getLinkedFieldCombined(600[v-z]:610[v-z]:611[v-z]:630[v-z]:650[v-z]:651[v-z]:654[v-z]:655[v-z])
subject_topic_facet = custom, removeTrailingPunct(630aa:650aa:654ab:655ab)
subject_name_facet = custom, removeTrailingPunct(600abcdq:610ab:611ab)
subject_era_facet = custom, removeTrailingPunct(650y:651y:654y:655y)
subject_geo_facet = custom, removeTrailingPunct(651a:650z)

# Publication fields
# used for facet and display, and copied for sort
pub_date = script(get_dates.bsh), getPubDate

# Call Number fields
lc_callnum_display = 050ab, first
lc_1letter_facet = 050a[0], callnumber_map.properties, first
lc_alpha_facet = 050a, (pattern_map.lc_alpha), first
lc_b4cutter_facet = 050a, first

# URL Fields
url_fulltext_display = custom, getFullTextUrls
url_suppl_display = custom, getSupplUrls



# Custom LBCC Fields
abstract_display = 520a
bibtex_t = 951a
contents_t = 505[a-z]
contents_display = 505[a-z]
contributor_display = 511a:700abcegqu:710abcdegnu:711acdegjnqu:505r
edition_display = 250a
eg_tcn_t = 901c, first
followed_by_t = 785at
genre_facet = 655a
has_part = 774at
is_electronic_facet = 950b, first
is_part_of = 772at:773at
note_display = 500a
oclcn_t = script(get_identifiers.bsh), getOclcNumber
original_title_t = 765t
place_of_publication_display = 260a:264a, first
place_of_publication_vern_display = custom, getLinkedField(260a:264a)
preceeded_by_t = 780t
publication_note_display = 362a
publisher_display = custom, removeTrailingPunct(260b:264b)
publisher_vern_display = custom, getLinkedField(260b:264b)
publisher_t = custom, getLinkedFieldCombined(260b:264b)
record_source_facet = 950a, first
serial_coverage_display = 362a


# MAPPINGS

# format mapping
#    leader 06-07
map.format.aa = Book
map.format.ab = Serial
map.format.ai = Research guide 
map.format.am = Book
map.format.as = Serial
map.format.ta = Book
map.format.tm = Book
#    terrible hacks to add additional formats not clearly established in MARC
map.format.az = Ebook
map.format.gz = Streaming video
map.format.iz = Streaming audio
map.format.sz = Electronic journal
map.format.jz = Streaming music
#    leader 06
map.format.c = Musical score
map.format.d = Musical score
map.format.e = Map
map.format.f = Map
map.format.g = Video
map.format.i = Non-musical recording
map.format.j = Musical recording
map.format.k = Image
map.format.m = Computer file
map.format.o = Kit
map.format.r = Equipment
#    007[0]  when it doesn't clash with above
map.format.h = Microform
map.format.q = Musical score
map.format.v = Video
#    none of the above
map.format = Unknown

pattern_map.lc_alpha.pattern_0 = ^([A-Z]{1,3})\\d+.*=>$1

pattern_map.isbn_clean.pattern_0 = ([- 0-9]*[0-9]).*=>$1
